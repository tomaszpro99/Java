Ÿród³o: http://komputerowe-kursy.videokurs.pl/
W jaki sposób efektywnie uczyæ siê informatyki?
1. Zaczynamy

Zacznijmy od tego, któr¹ ga³¹Ÿ informatyki mam zamiar omawiaæ, poniewa¿ pojêcie "informatyka" jest bardzo wieloznaczne. W sumie to informatykiem w dzisiejszym skomputeryzowanym œwiecie mo¿e nazwaæ siê prawie ka¿dy - wystarczy, ¿e potrafi siê przetwarzaæ informacjê znajduj¹ce siê w naszych komputerach, czyli np. przeszukiwaæ zawartoœæ internetu przy pomocy wyszukiwarki.
Ja mam zamiar przekazaæ Ci tajniki w jaki sposób efektywnie uczyæ siê programowaæ. Co to tak naprawdê oznacza s³owo PROGRAMOWANIE? Programowanie oznacza pisanie kodu w jakimœ jêzyku, czyli czymœ za pomoc¹ czego mo¿emy komunikowaæ siê z nasz¹ mo¿na by rzec bez nas g³upi¹ (przynajmniej na razie) maszyn¹ PC (Personal Computer). Czyli programowanie mo¿na by porównaæ do pisania tej¿e tutaj lekcji, przy pomocy której komunikujê siê z Tob¹ w jêzyku polskim. My skupimy siê jednak na programowaniu w innym jêzyku, a dok³adniej bêdzie nim Java. Oznacza to, ¿e przy pomocy Javy, bêdziemy pisaæ pewnego rodzaju artyku³ w naszym wypadku bêdzie to kod Ÿród³owy, który zostanie zamieniony na jêzyk zrozumia³y przez nasz¹ maszynê.
2. Jak efektywnie siê uczyæ?
Zrozum jak dzia³a komputer
To co teraz napiszê podkreœlam jest mo¿na by rzec najwa¿niejszym czynnikiem, aby zrozumieæ to co programujemy. Programuj¹c musimy zdawaæ sobie sprawê z tego, ¿e maszyna, która czyta nasze programy JEST G£UPIA, co z tego, ¿e liczy kilkanaœcie tysiêcy razy szybciej ni¿ my, kiedy nie potrafi (przynajmniej na razie) racjonalnie myœleæ. Jeœli ona myœli, to myœli tylko tak jak kaza³ jej to robiæ jakiœ program, czyli tak naprawdê cz³owiek, bo w koñcu programy pisz¹ ludzie.
Do czego zmierzam? Otó¿ pisz¹c programy powinniœmy zdawaæ sobie z tego sprawê, ¿e maszyna nie domyœli siê Twoich zamiarów oraz Ciê nie poprawi. Ona wykona kod, który Ty napisa³eœ w 100% tak jak go napisa³eœ. Czyli kod ZAWSZE dzia³a teoretycznie prawid³owo z tym co napisaliœmy. Czyli to nie maszyna pope³nia b³¹d w interpretowaniu, ale to my podczas pisania pope³niamy b³êdy.
Co z tego wynika? Powinniœmy pisz¹c programy zni¿yæ siê do poziomu komputera i myœleæ tak jak program, który nazywa siê kompilator. Kompilator tak ogólnie mówi¹c, nie wbijaj¹c siê w szczegó³y interpretuje kod Ÿród³owy (czyli to co my piszemy), a nastêpnie (pomijaj¹c kilka kroków) zamienia go w jêzyk zrozumia³y przez komputer. Czyli jaki? Po prostu zmienia go w ci¹g zer oraz jedynek, czyli np. 0110 0011 1100 0001 1111... . Dlaczego s¹ to 0 oraz 1? Bo akurat takie napiêcia naj³atwiej otrzymywaæ komputerowi. Co to oznacza? Oznacza to, ¿e wszystkie programy powinniœmy pisaæ tak jakbyœmy to my byli kompilatorami. Czyli czytamy kod Ÿród³owy OD GÓRY DO DO£U, w taki te¿ sposób bêdzie wykonywany nasz program (z pewnymi wyj¹tkami).
Reasumuj¹c pope³niaj¹c b³¹d nie rozbijajmy monitora, ani nie przeklinajmy na komputer bo to nie jego wina ;) Bo on nie myœli... Myœlimy tylko my i niestety pisz¹c program musimy zni¿yæ siê do poziomu kompilatora.
Ucz siê jêzyka angielskiego
Je¿eli chcesz na powa¿nie "zabawiæ siê" w programowanie to powinieneœ znaæ jêzyk angielski na przynajmniej œrednim poziomie. Dlaczego? Wszystkie biblioteki tzn. zbiór pewnego rodzaju zabawek do tworzenia mniej oraz bardziej skomplikowanych programów s¹ opisane w jêzyku angielskim. Do jakiegoœ poziomu mo¿esz znaleŸæ kursy jêzyka programowania w naszym rodzimym jêzyku, ale im wy¿ej zajdziesz tym trudniej bêdzie Ci takie kursy znaleŸæ. Dodatkowo 90% tych (jak ja to tymczasowo nazwa³em) zabawek, s¹ opisane najczêœciej tylko w bibliotekach.
Nastêpnym argumentem za tym, aby uczyæ siê angielskiego jest to, ¿e wszystkie jêzyki programowania tak¿e s¹ w jêzyku angielskim. Dla przyk³adu linijka: public static void - z niej mogê wywnioskowaæ, ¿e: 

Public - z ang. publiczne - dostêpne dla wszystkich
Static - z ang. statyczne - czyli bêdzie w jakimœ sensie sta³e 
Void - z ang. puste - czyli nie bêdzie pewnego rodzaju wartoœci?

Je¿eli znamy jêzyk angielski to z samych s³ów mo¿na wywnioskowaæ coœ naprawdê wartego uwagi. Dochodzimy tym samym do nastêpnego podpunktu.
Czytaj uwa¿nie to nie jest powieœæ!
Lepiej jest przeczytaæ ksi¹¿kê dotycz¹c¹ informatyki 10x wolniej ni¿ 10x szybciej. Ka¿de s³ówko ma czêsto ogromne znaczenie. Nad ka¿dym s³owem powinniœmy siê zastanowiæ. Je¿eli nie rozumiesz pewnego pojêcia to polecam zawsze mieæ odpalon¹ np. stronê: http://sjp.pwn.pl/, na której mo¿esz szybko rozmyæ swoje w¹tpliwoœci. Czêsto myœlimy, ¿e rozumiemy dane s³owo, jednak jest to niestety mylne, warto zagl¹daæ do s³ownika!
Jako przyk³ad podam s³owo mapowanie. Có¿ ono oznacza? Mapa najczêœciej kojarzy nam siê jako przedmiot, no ale tutaj mamy czasownik. Czyli co... mapowanie to bêdzie rysowanie jakichœ œcie¿ek na mapie? W pewnym sensie tak. Je¿eli te œcie¿ki porówna³oby siê do po³¹czeñ dwóch ze sob¹ elementów to jak najbardziej tak. Mapowanie oznacza przyporz¹dkowanie do siebie dwóch elementów w stylu klucz(identyfikator)-wartoœæ. W zdaniu, które przed chwil¹ wyjaœni³o co to jest mapowanie, znajduje siê znów parê pojêæ, nad którymi powinno siê znów spêdziæ chwilê czasu, np. przyporz¹dkowanie. Przyporz¹dkowanie jest to po prostu porz¹dkowanie, czyli uk³adanie czegoœ w okreœlonym porz¹dku, a nastêpnie to coœ stawiamy PRZY sobie, czyli ³¹czymy, aby stanowi³o w jakimœ sensie jednoœæ, czyli coœ w stylu po³¹czenia. Oczywiœcie wszystkie definicje s³ownikowe mog¹ siê bardzo ró¿niæ od tego co ja tu napisa³em. Proszê pamiêtaæ, ¿e ka¿da definicja, czyli opis zosta³ stworzony przez cz³owieka. Cz³owieka, który nie jest nieomylny, cz³owiek czêsto pope³nia b³êdy.
Z tego co napisa³em mo¿na wywnioskowaæ, ¿e ka¿de s³owo ma jakieœ znaczenie i nad ka¿dym s³owem tak naprawdê mo¿na by spêdziæ du¿o czasu analizuj¹c go. Ale jeœli poœwiêcimy te parê chwil to zaprocentuje to nam w efektywnoœci naszej nauki.
Pamiêtaj, ¿e WSZYSTKO nazywa siê w jakiœ sposób nie z byle jakiego powodu. Ka¿de s³owo ma jakieœ pochodzenie, tzn. genezê np. geometria pochodzi od greckiego geo, co oznacza ziemia, a metria od miary, czyli jest to nauka o mierzeniu na ziemi.
Po co to wszystko piszê i tak podkreœlam? Poniewa¿ je¿eli zaczniesz uczyæ siê w taki sposób to ka¿de s³owo bêdziesz nagle z czymœ kojarzy³, a nasz umys³ jest tak skonstruowany, ¿e w³aœnie w taki sposób zapamiêtuje informacje najszybciej oraz na d³ugi okres czasu.
Pisz oraz programuj sam!
Je¿eli czytasz jakiœ kurs lub te¿ ogl¹dasz video kurs, to po przeczytaniu / obejrzeniu ka¿dej lekcji sprawdŸ czy tak naprawdê potrafisz wykonaæ to czego siê dowiedzia³eœ. Czêsto po przeczytaniu dobrego artyku³u lub te¿ lekcji, wydajê nam siê, ¿e wszystko jest takie proste i piêkne ;) Je¿eli nie potwierdzimy tego swojego stanu umys³u poprzez æwiczenia to szybko to co poznaliœmy mo¿e nam po prostu wylecieæ z g³owy.
Stawiaj sobie wyzwania, twórz w³asne programy, testuj, nie bój siê, kompilator jest jak dziewczyna - podobno nie gryzie... ;) Pamiêtaj - trening czyni mistrza!
Nie ucz siê bez przerwy!
W trakcie nauki umys³ mêczy siê tak jak i cia³o podczas treningu, ale im d³u¿ej trenujesz tym lepsz¹ masz kondycjê, oczywiœcie nie powinno siê przesadzaæ bo padnie siê na... . Im wiêcej siê uczymy tym wydajnoœæ naszego umys³u jest coraz mniejsza. Rób sobie pewnego rodzaju przerwy, które nie doœæ, ¿e poprawi¹ Ci sylwetkê oraz kondycjê to pozwol¹ Twojemu umys³owi miêdzy czasie siê zregenerowaæ. Polecam bardzo basen, oraz np. ustawienie sobie jakiegoœ programu, który bêdzie informowa³ Ciê o tym, ¿e minê³a np. 1 godzina i czas zrobiæ sobie przerwê. Podczas przerwy mo¿esz np. zrobiæ parê pompek, przysiadów, brzuszków, za co na pewno organizm Ci siê za to odwdziêczy.
Video Kursy = szybki start
Ostatni punkt mo¿esz i masz prawo uwa¿aæ za ma³o obiektywny, poniewa¿ sam jestem autorem Video Kursów. Je¿eli zaczynasz przygodê z programowaniem, to naprawdê video kursy pozwol¹ Ci przejœæ przez to co jest najtrudniejsze, czyli pocz¹tek.
Pocz¹tki s¹ zawsze trudne, pierwsza jazda na rowerze, pierwszy skok do wody, pierwsza jazda autem, ka¿dy ten pierwszy raz jest zwi¹zany z ró¿nego rodzajem trudnoœciami. Najczêœciej przy tych zdarzeniach, które wymieni³em ktoœ Ci pomaga³ oraz t³umaczy³ jak wykonaæ dan¹ czynnoœæ, na pewno u³atwi³o Ci to ten pierwszy raz. Tak samo jest z jêzykami programowania. Ten pierwszy jêzyk do poznania bêdzie trudny, ka¿dego nastêpnego nauczysz siê dwukrotnie szybciej oraz przyjdzie Ci to z ³atwoœci¹. Je¿eli chcesz nauczyæ siê programowaæ w wygodniejszy oraz szybszy sposób nie mêcz¹c siê z czytaniem i analizowaniem wszystkiego samemu to po prostu zachêcam do zapoznania siê z Video Kursami, które sprawi¹, ¿e ten w³aœnie pierwszy raz bêdzie ³atwiejszy. Zaoszczêdzisz moim zdaniem przynajmniej 20-30 h ¿ycia, które mo¿esz wykorzystaæ na lepsze cele chocia¿by lenistwo, które te¿ czasem rozwija, bo pozwala nam odpocz¹æ ;)
Video Kursy s¹ o tyle dobre, ¿e podczas ogl¹dania uczysz siê od razu tak jakby praktyki, poniewa¿ przynajmniej w kursach które ja prowadzê, wszystkie kody pisane s¹ od zera. Jesteœmy wzrokowcami wiêc nauka idzie du¿o szybciej. Czytaj¹c ksi¹¿kê, u¿ywamy tylko narz¹du wzroku oraz tekst czytany jest statyczny (nieruchomy). Ogl¹daj¹c video kurs korzystamy nie tylko z narz¹du wzroku, ale tak¿e s³uchu.
W ksi¹¿kach kod Ÿród³owy jest napisany od razu w ca³oœci, czêsto jest nie do koñca wyt³umaczony. Musisz niestety analizowaæ ten kod najczêœciej w 90% sam. Natomiast w video kursach widzisz jak osoba prowadz¹ca pisze ca³y ten program od zera.
3. Podsumowanie

Reasumuj¹c, ucz¹c siê w sposób efektywny, czyli taki jak ja to opisa³em zyskasz na czasie, ale najwa¿niejsze w tym jest to, ¿e to co siê nauczysz zostanie Ci na d³u¿ej w pamiêci, a co za tym idzie bêdziesz móc d³u¿ej z tego korzystaæ oraz cieszyæ siê z faktu, ¿e siê wszystko rozumie. Mam nadziejê, ¿e to co napisa³em pokaza³o, ¿e informatyki nie powinno uczyæ siê na pamiêæ ze schematów. Informatyka, a w naszym przypadku programowanie jest bardzo logiczna tak jaki i matematyka oraz fizyka i nie powinno siê jej "kuæ", lecz próbowaæ zrozumieæ, skupiaj¹c siê podczas nauki ;)